package nl.rls.ci.soapinterface;

import org.springframework.core.io.ClassPathResource;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 */
@WebServiceClient(
        name = "LIReceiveMessageService",
        targetNamespace = "http://uic.cc.org/UICMessage",
        wsdlLocation = "src/main/java/nl/rls/ci/soapinterface/UICCCMessageProcessingInboundWS.wsdl"
)
public class LIReceiveMessageService
        extends Service {

    public final static URL LIRECEIVEMESSAGESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(nl.rls.ci.soapinterface.LIReceiveMessageService.class.getName());

    static {
        URL url = null;
        try {
            url = new ClassPathResource("UICCCMessageProcessingInboundWS.wsdl").getURL();
        } catch (IOException e) {
            e.printStackTrace();
        }
        LIRECEIVEMESSAGESERVICE_WSDL_LOCATION = url;
    }

    public LIReceiveMessageService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LIReceiveMessageService() {
        super(LIRECEIVEMESSAGESERVICE_WSDL_LOCATION, new QName("http://uic.cc.org/UICMessage", "LIReceiveMessageService"));
    }

    /**
     * @return returns UICReceiveMessage
     */
    @WebEndpoint(name = "UICReceiveMessagePort")
    public UICReceiveMessage getUICReceiveMessagePort() {
//        System.out.println("UICReceiveMessagePort " + this.getServiceName());
//        System.out.println("getWSDLDocumentLocation " + this.getWSDLDocumentLocation());
//        System.out.println("getPorts().next(): " + this.getPorts().next());
        return super.getPort(new QName("http://uic.cc.org/UICMessage", "UICReceiveMessagePort"), UICReceiveMessage.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns UICReceiveMessage
     */
    @WebEndpoint(name = "UICReceiveMessagePort")
    public UICReceiveMessage getUICReceiveMessagePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://uic.cc.org/UICMessage", "UICReceiveMessagePort"), UICReceiveMessage.class, features);
    }

}
